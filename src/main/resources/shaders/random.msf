// TausLCG

uvec3 TausStepVec(const uvec3 z, const ivec3 S1, const ivec3 S2, const ivec3 S3, const uvec3 M)
{
    uvec3 b = ((z << S1) ^ z) >> S2;
    return ((z & M) << S3) ^ b;
}

uint LCGStep(const uint z, const uint A, const uint C)
{
    return A * z + C;
}

const ivec3 TAUS_S1 = ivec3(13, 2, 3);
const ivec3 TAUS_S2 = ivec3(19, 25, 11);
const ivec3 TAUS_S3 = ivec3(12, 4, 17);
const uvec3 TAUS_M = uvec3(4294967294u, 4294967288u, 4294967280u);

uint nextTausLCG(inout uvec4 state)
{
	state = uvec4(
		TausStepVec(state.xyz, TAUS_S1, TAUS_S2, TAUS_S3, TAUS_M),
		LCGStep(state.w, 1664525, 1013904223u)
	);

    return state.x ^ state.y ^ state.z ^ state.w;
}

// Sobol

const int NUM_SOBOL_DIMENSIONS = 1024;
const int SOBOL_MATRIX_SIZE = 52;
layout(std430, binding = 0) buffer SOBOL_CONSTANTS
{
	uint SOBOL_MATRICES[NUM_SOBOL_DIMENSIONS * SOBOL_MATRIX_SIZE];
};

uint sobol(uint dimension, uint i)
{
    uint result = 0;

    for(uint j = dimension * SOBOL_MATRIX_SIZE; i != 0; i >>= 1, j++)
        if((i & 1) != 0)
            result ^= SOBOL_MATRICES[j];

    return result;
}
